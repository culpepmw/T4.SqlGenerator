<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Configuration" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="$(ProjectDir)bin\$(ConfigurationName)\Dapper.dll" #>
<#@ assembly name="Microsoft.CSharp" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="Dapper" #>
<#@ import namespace="Microsoft.CSharp.RuntimeBinder" #>
<#@ include file="Functions.t4" #>
<#@ include file="SaveOutput.tt" #>
<#@ output extension=".txt" #>
<#
var pageIndex = 0;
var pageSize = 4500;
var startRowId = pageIndex * pageSize + 1;
var endRowId = startRowId + pageSize - 1;

using (var connection = new SqlConnection("Data Source=RCM41VDCPEDB01;Initial Catalog=EligibilityIntegrity_QA;Integrated Security=True;"))
{
    connection.Open();

	var sql = new StringBuilder();
	sql.AppendLine("WITH data AS");
	sql.AppendLine("(");
	sql.AppendLine("	SELECT	ROW_NUMBER() OVER (ORDER BY Id) AS rowId, ");
	sql.AppendLine("			*");
	sql.AppendLine("	FROM	dbo.ICSCodeRepository");
	sql.AppendLine(")");
	sql.AppendLine("SELECT	*");
	sql.AppendLine("FROM	data");
	sql.AppendLine("WHERE	rowId >= " + startRowId + " AND rowId <= " + endRowId);

    var rows = connection.Query(sql.ToString());

	foreach (var row in rows)
	{
#>
IF NOT EXISTS (SELECT * FROM IcsCodeRepository WHERE [Id] = 1)  
	INSERT INTO [IcsCodeRepository]([Id], [CodeType], [CodeValue], [CodeDescription], [CreatedDate], [DeactivatedDate]) 
	VALUES (<#= row.Id #>, '<#= row.CodeType #>', '<#= row.CodeValue #>', '<#= row.CodeDescription #>', <#= GetNullableDateString(row.CreatedDate) #>, <#= GetNullableDateString(row.DeactivatedDate) #>);
ELSE 
	UPDATE [IcsCodeRepository] 
	SET [CodeType] = '<#= row.CodeType #>', [CodeValue] = '<#= row.CodeValue #>', [CodeDescription] = '<#= row.CodeDescription #>', [CreatedDate] = <#= GetNullableDateString(row.CreatedDate) #>, [DeactivatedDate] = <#= GetNullableDateString(row.DeactivatedDate) #> 
	WHERE [Id] = <#= row.Id #>;
GO

<#
	}
}

var fileName = string.Format("IcsCodeRepository_{0}.sql", (pageIndex + 1).ToString("0#"));
SaveOutput(fileName);
#>